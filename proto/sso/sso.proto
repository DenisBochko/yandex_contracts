syntax = "proto3";

package auth;

// Настройки для генерации Go кода.
option go_package = "reelcy.sso.v1;ssov1";

service Auth {
    rpc Register(RegisterRequest) returns (RegisterResponse);
    rpc Login(LoginRequest) returns (LoginResponse);
    rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);
    rpc GetUserById(GetUserByIdRequest) returns (GetUserByIdResponse);
    rpc GetUsers(GetUsersRequest) returns (GetUsersResponse);
    // rpc Verify(VerifyRequest) returns (VerifyResponse);
}
// ==========Register==========
message RegisterRequest {
    string username = 1;
    string email = 2;
    string password = 3;
}

// возвращает id созданного пользователя
message RegisterResponse {
    string user_id = 1;
}

// ==========Login==========
message LoginRequest {
    string email = 1;
    string password = 2;
}

message LoginResponse {
    string access_token = 1;
    string refresh_token = 2;
}

// ==========Refresh==========
message RefreshTokenRequest {
    string access_token = 1;
}

message RefreshTokenResponse {
    string access_token = 1;
    string refresh_token = 2; // если refresh_token не был обновлён, то возвращается старый
}

// ==========GetUserById==========
message GetUserByIdRequest {
    string user_id = 1;
}

message GetUserByIdResponse {
    User user = 1; 
}

// ==========GetUsers==========
message GetUsersRequest {
    repeated string user_ids = 1; // Массив ID пользователей
}

message GetUsersResponse {
    repeated User users = 1; // Массив структур пользователей
}

// Структура пользователя
message User {
    string user_id = 1;
    string name = 2;
    string email = 3;
}